(define (expmod base exp mod)
  (define (mulmod x y)
	(remainder (* x y) mod))
  (define (squmod x) (mulmod x x))
  (define (compute-iter res base exp)
	(cond ((= exp 0) res)
		  ((even? exp) (compute-iter res (squmod base) (/ exp 2)))
		  (else (compute-iter (mulmod res base) base (- exp 1)))))
  (compute-iter 1 base exp))
(display (expmod 2 13 13))
